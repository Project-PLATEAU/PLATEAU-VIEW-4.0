name: ⭐️ Deploy PLATEAU Extension dev
on:
  workflow_call:
  workflow_dispatch:
  repository_dispatch:
    types: [deploy-extension-dev]

env:
  GCS_DEST: gs://plateau-dev-reearth-static-bucket
  IMAGE: ghcr.io/eukarya-inc/plateau-view/plateauview-extension:dev
  # used by build
  PLATEAU_DEFAULT_GOOGLE_STREETVIEW_TOKEN: ${{ secrets.PLATEAU_DEFAULT_GOOGLE_STREETVIEW_TOKEN }}
  # used by build
  PLATEAU_ORIGIN: https://static.reearth.plateau.reearth.io/extension

jobs:
  deploy_extension:
    runs-on: ubuntu-latest
    if: github.event.repository.full_name == 'eukarya-inc/PLATEAU-VIEW'
    environment: dev
    permissions:
      contents: read
      id-token: write
      packages: write
    defaults:
      run:
        working-directory: extension
    steps:
      - uses: actions/checkout@v3
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: google-github-actions/auth@v2
        with:
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
      - uses: google-github-actions/setup-gcloud@v2
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v4
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install
        run: yarn install
      - name: Build
        env:
          NODE_ENV: "development"
        run: yarn build
      - name: Deploy
        run: gsutil -m -h "Cache-Control:no-store" rsync -x "^estat/.*$" -dr dist ${{ env.GCS_DEST }}/extension
      - name: Pack extension
        run: tar -zcvf plateauview-extension.tar.gz dist
      - name: Save as artifact
        uses: actions/upload-artifact@v4
        with:
          name: plateauview-extension
          path: extension/plateauview-extension.tar.gz
      - name: Save to Docker image
        run: tar -cf - dist | docker import - "$IMAGE" && docker push "$IMAGE"
